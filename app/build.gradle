plugins {
    id 'com.android.application'
    id 'com.google.devtools.ksp'
    id 'kotlin-android'
}

def getVersionCode = { ->
    return 100
    try {
        def code = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--count', 'origin/main'
            standardOutput = code
        }
        return Integer.parseInt(code.toString().trim())
    }
    catch (ignored) {
        return 1
    }
}

def getVersionName = { ->
    return '1.0.0'
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags', '--dirty'
            standardOutput = stdout
        }
        return stdout.toString().trim().replaceFirst("^v", "")
    }
    catch (ignored) {
        return '0.0.0'
    }
}

android {
    compileSdk 35
    defaultConfig {
        applicationId "netfix.app"
        minSdkVersion 19
        targetSdkVersion 35
        versionCode getVersionCode()
        versionName getVersionName()
        multiDexEnabled = true // required when setting minSdkVersion to 20 or lower
        // Use SupportLibrary for vectors
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            def keystoreProperties = new Properties()
            def keystorePropsFile = file("keystore/keystore_config")

            if (keystorePropsFile.exists()) {
                file("keystore/keystore_config").withInputStream { keystoreProperties.load(it) }
                storeFile file("$keystoreProperties.storeFile")
                storePassword "$keystoreProperties.storePassword"
                keyAlias "$keystoreProperties.keyAlias"
                keyPassword "$keystoreProperties.keyPassword"
            } else {
                storeFile file(System.getenv('KEYSTORE_FILE'))
                storePassword System.getenv('KEYSTORE_PASSWORD')
                keyAlias System.getenv('RELEASE_SIGN_KEY_ALIAS')
                keyPassword System.getenv('RELEASE_SIGN_KEY_PASSWORD')
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        // Flag to enable support for the new language APIs
        // https://developer.android.com/studio/write/java8-support-table
        coreLibraryDesugaringEnabled true
        // Sets Java compatibility to Java 8
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        resources.excludes += "DebugProbesKt.bin"
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    // gradle 4.6 migration: disable dimensions mechanism
    // more: https://proandroiddev.com/advanced-android-flavors-part-4-a-new-version-fc2ad80c01bb
    flavorDimensions "default"

    productFlavors {
        lite {
            buildConfigField "boolean", "enableUpdate", "false"
            buildConfigField "String", "defaultAppUrl", "\"https://netfix.cc\""
        }
        full {
            buildConfigField "boolean", "enableUpdate", "false"
            buildConfigField "String", "defaultAppUrl", "\"https://netfix.cc\""
        }
        ruStore {
            versionNameSuffix "-RuStore"
            minSdk 24 // minSdk RuStore.apk
            buildConfigField "boolean", "enableUpdate", "false"
            buildConfigField "String", "defaultAppUrl", "\"https://netfix.cc\""
        }
    }

    packagingOptions {
        resources.excludes += "DebugProbesKt.bin"
    }
    buildFeatures {
        viewBinding true
        buildConfig true
    }
    namespace 'netfix.app'
}

dependencies {

    // https://developer.android.com/studio/write/java8-support#library-desugaring
    // For AGP 7.4+
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // JavaScript to run PAC file to get correct proxies
    implementation 'org.mozilla:rhino:1.7.15'
    def okhttpVersion = '3.12.13' // 3.12.13 - latest version for API < 21
    //noinspection GradleDependency
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    //noinspection GradleDependency
    implementation "com.squareup.okhttp3:okhttp-dnsoverhttps:$okhttpVersion"
    // multidex
    implementation 'androidx.multidex:multidex:2.0.1'
    // netcipher
    implementation 'info.guardianproject.netcipher:netcipher:2.1.0'
    // androidx
    def actKtxVer = '1.9.3' // 1.9.3 - latest version for API < 21
    //noinspection GradleDependency
    implementation "androidx.activity:activity-ktx:$actKtxVer"
    def appCompatVer = '1.6.1' // 1.6.1 - latest version for API < 21
    //noinspection GradleDependency
    implementation "androidx.appcompat:appcompat:$appCompatVer"
    def constraintVersion = '2.1.0' // 2.1.0 - latest version for API < 21
    //noinspection GradleDependency
    implementation "androidx.constraintlayout:constraintlayout:${constraintVersion}"
    def coreKtxVer = '1.13.1' // 1.13.1 - latest version for API < 21
    //noinspection GradleDependency
    implementation "androidx.core:core-ktx:$coreKtxVer"
    def lifecycleVersion = '2.8.7'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycleVersion"
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.recommendation:recommendation:1.0.0'
    implementation 'androidx.tvprovider:tvprovider:1.0.0'
    def vectordrawableVersion = '1.2.0'
    implementation "androidx.vectordrawable:vectordrawable:${vectordrawableVersion}"
    implementation 'org.brotli:dec:0.1.2'
    //glide
    def glideVersion = '4.16.0'
    implementation "com.github.bumptech.glide:glide:${glideVersion}"
    implementation("com.github.bumptech.glide:okhttp3-integration:${glideVersion}") {
        exclude group: 'glide-parent'
        transitive = false
    }
    ksp "com.github.bumptech.glide:ksp:${glideVersion}"
    implementation "com.github.bumptech.glide:annotations:${glideVersion}"
    def muiVersion = '1.12.0'
    implementation "com.google.android.material:material:${muiVersion}"
    // coroutines
    def coroutinesVersion = '1.10.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    // json serializer
    implementation 'com.google.code.gson:gson:2.12.0'
    // lottie loaders
    implementation 'com.airbnb.android:lottie:6.6.2'
    // webkit
    def webkitVersion = '1.11.0' // 1.11.0 - latest version for API < 21
    //noinspection GradleDependency
    implementation "androidx.webkit:webkit:$webkitVersion"
    // for TLS v1.3 on API < 29
    implementation 'org.conscrypt:conscrypt-android:2.5.3'
    // crosswalk latest
    liteApi fileTree(dir: 'libs', include: ['xwalk_shared_library-23.53.589.4.aar'])
    ruStoreApi fileTree(dir: 'libs', include: ['xwalk_shared_library-23.53.589.4.aar'])
    fullApi fileTree(dir: 'libs', include: ['xwalk_core_library-23.53.589.4.aar'])
}